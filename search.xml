<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[css实现三栏布局]]></title>
    <url>%2F2018%2F03%2F26%2Fcss%E4%B8%89%E6%A0%8F%E5%B8%83%E5%B1%80%2F</url>
    <content type="text"><![CDATA[1.浮动解决方法 使用float兼容性好，但需要记得清除浮动，处理好周边元素关系。 12345678910111213141516171819202122232425262728&lt;section class="layout float"&gt; &lt;style type="text/css" media="screen"&gt; .layout.float .left&#123; float: left; width: 300px; background: red; &#125; .layout.float .right&#123; float: right; width: 300px; background: blue; &#125; .layout.float .center&#123; background: yellow; overflow: auto; &#125; &lt;/style&gt; &lt;article class="left-right-center"&gt; &lt;div class="left"&gt;&lt;/div&gt; &lt;div class="right"&gt;&lt;/div&gt; &lt;div class="center"&gt; &lt;h1&gt;浮动解决方法&lt;/h1&gt; 1.三栏布局中间部分 2.三栏布局中间部分 3.三栏布局中间部分 &lt;/div&gt; &lt;/article&gt;&lt;/section&gt; 2.绝对定位解决方法 绝对定位快捷、简便，但是布局脱离文档流，其子元素也要脱离文档流。 1234567891011121314151617181920212223242526272829303132&lt;section class="layout absolute"&gt; &lt;style type="text/css" media="screen"&gt; .layout.absolute .left-right-center&gt;div&#123; position: absolute; &#125; .layout.absolute .left&#123; left: 0; width: 300px; background: red; &#125; .layout.absolute .center&#123; left:300px; right: 300px; background: yellow; &#125; .layout.absolute .right&#123; right: 0; width: 300px; background: blue; &#125; &lt;/style&gt; &lt;article class="left-right-center"&gt; &lt;div class="left"&gt;&lt;/div&gt; &lt;div class="center"&gt; &lt;h1&gt;绝对定位解决方法&lt;/h1&gt; 1.这是三栏布局中间部分 1.这是三栏布局中间部分 1.这是三栏布局中间部分 &lt;/div&gt; &lt;div class="right"&gt;&lt;/div&gt; &lt;/article&gt;&lt;/section&gt; 3.flexbox解决方法 flex布局教程 弹性布局，比较完美。 1234567891011121314151617181920212223242526272829303132&lt;section class="layout flexbox"&gt; &lt;style type="text/css" media="screen"&gt; .layout.flexbox&#123; margin-top: 150px; &#125; .layout.flexbox .left-right-center&#123; display: flex; &#125; .layout.flexbox .left&#123; width: 300px; background: red; &#125; .layout.flexbox .right&#123; width: 300px; background: blue; &#125; .layout.flexbox .center&#123; flex: 1; background: yellow; &#125; &lt;/style&gt; &lt;article class="left-right-center"&gt; &lt;div class="left"&gt;&lt;/div&gt; &lt;div class="center"&gt; &lt;h1&gt;flexbox解决方法&lt;/h1&gt; 1.这是三栏布局中间部分 1.这是三栏布局中间部分 1.这是三栏布局中间部分 &lt;/div&gt; &lt;div class="right"&gt;&lt;/div&gt; &lt;/article&gt;&lt;/section&gt; 4.table解决方法 目前使用不多,但也是一种方法。 123456789101112131415161718192021222324252627282930313233&lt;section class="layout table"&gt; &lt;style type="text/css" media="screen"&gt; .layout.table .left-right-center&#123; width: 100%; display: table; height: 100px; &#125; .layout.table .left-right-center&gt;div&#123; display: table-cell; &#125; .layout.table .left&#123; width: 300px; background: red; &#125; .layout.table .right&#123; width: 300px; background: blue; &#125; .layout.table .center&#123; background: yellow; &#125; &lt;/style&gt; &lt;article class="left-right-center"&gt; &lt;div class="left"&gt;&lt;/div&gt; &lt;div class="center"&gt; &lt;h1&gt;table布局解决方法&lt;/h1&gt; 1.这是三栏布局中间部分 1.这是三栏布局中间部分 1.这是三栏布局中间部分 &lt;/div&gt; &lt;div class="right"&gt;&lt;/div&gt; &lt;/article&gt;&lt;/section&gt; 5.grid解决方法 一种功能强大的新型布局，可以做很多复杂的事情，并且代码量很小。 1234567891011121314151617181920212223242526272829&lt;section class="layout grid"&gt; &lt;style type="text/css" media="screen"&gt; .layout.grid .left-right-center&#123; display: grid; width: 100%; grid-template-rows: 100px; grid-template-columns: 300px auto 300px; &#125; .layout.grid .left&#123; background: red; &#125; .layout.grid .right&#123; background: blue; &#125; .layout.grid .center&#123; background: yellow; &#125; &lt;/style&gt; &lt;article class="left-right-center"&gt; &lt;div class="left"&gt;&lt;/div&gt; &lt;div class="center"&gt; &lt;h1&gt;grid布局解决方案&lt;/h1&gt; 1.这是三栏布局中间部分 1.这是三栏布局中间部分 1.这是三栏布局中间部分 &lt;/div&gt; &lt;div class="right"&gt;&lt;/div&gt; &lt;/article&gt;&lt;/section&gt; 全部代码 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;Layout&lt;/title&gt; &lt;style type="text/css" media="screen"&gt; html *&#123; padding: 0; margin: 0; &#125; .layout&#123; margin-top: 20px; &#125; .layout article div&#123; min-height: 100px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;section class="layout float"&gt; &lt;style type="text/css" media="screen"&gt; .layout.float .left&#123; float: left; width: 300px; background: red; &#125; .layout.float .right&#123; float: right; width: 300px; background: blue; &#125; .layout.float .center&#123; background: yellow; overflow: auto; &#125; &lt;/style&gt; &lt;article class="left-right-center"&gt; &lt;div class="left"&gt;&lt;/div&gt; &lt;div class="right"&gt;&lt;/div&gt; &lt;div class="center"&gt; &lt;h1&gt;浮动解决方案&lt;/h1&gt; 1.三栏布局中间部分 2.三栏布局中间部分 &lt;/div&gt; &lt;/article&gt; &lt;/section&gt; &lt;section class="layout absolute"&gt; &lt;style type="text/css" media="screen"&gt; .layout.absolute .left-right-center&gt;div&#123; position: absolute; &#125; .layout.absolute .left&#123; left: 0; width: 300px; background: red; &#125; .layout.absolute .center&#123; left:300px; right: 300px; background: yellow; &#125; .layout.absolute .right&#123; right: 0; width: 300px; background: blue; &#125; &lt;/style&gt; &lt;article class="left-right-center"&gt; &lt;div class="left"&gt;&lt;/div&gt; &lt;div class="center"&gt; &lt;h1&gt;绝对定位解决方案&lt;/h1&gt; 1.这是三栏布局中间部分 1.这是三栏布局中间部分 1.这是三栏布局中间部分 &lt;/div&gt; &lt;div class="right"&gt;&lt;/div&gt; &lt;/article&gt; &lt;/section&gt; &lt;section class="layout flexbox"&gt; &lt;style type="text/css" media="screen"&gt; .layout.flexbox&#123; margin-top: 150px; &#125; .layout.flexbox .left-right-center&#123; display: flex; &#125; .layout.flexbox .left&#123; width: 300px; background: red; &#125; .layout.flexbox .right&#123; width: 300px; background: blue; &#125; .layout.flexbox .center&#123; flex: 1; background: yellow; &#125; &lt;/style&gt; &lt;article class="left-right-center"&gt; &lt;div class="left"&gt;&lt;/div&gt; &lt;div class="center"&gt; &lt;h1&gt;flexbox解决方案&lt;/h1&gt; 1.这是三栏布局中间部分 1.这是三栏布局中间部分 1.这是三栏布局中间部分 &lt;/div&gt; &lt;div class="right"&gt;&lt;/div&gt; &lt;/article&gt; &lt;/section&gt; &lt;section class="layout table"&gt; &lt;style type="text/css" media="screen"&gt; .layout.table .left-right-center&#123; width: 100%; display: table; height: 100px; &#125; .layout.table .left-right-center&gt;div&#123; display: table-cell; &#125; .layout.table .left&#123; width: 300px; background: red; &#125; .layout.table .right&#123; width: 300px; background: blue; &#125; .layout.table .center&#123; background: yellow; &#125; &lt;/style&gt; &lt;article class="left-right-center"&gt; &lt;div class="left"&gt;&lt;/div&gt; &lt;div class="center"&gt; &lt;h1&gt;table布局解决方案&lt;/h1&gt; 1.这是三栏布局中间部分 1.这是三栏布局中间部分 1.这是三栏布局中间部分 &lt;/div&gt; &lt;div class="right"&gt;&lt;/div&gt; &lt;/article&gt; &lt;/section&gt; &lt;section class="layout grid"&gt; &lt;style type="text/css" media="screen"&gt; .layout.grid .left-right-center&#123; display: grid; width: 100%; grid-template-rows: 100px; grid-template-columns: 300px auto 300px; &#125; .layout.grid .left&#123; background: red; &#125; .layout.grid .right&#123; background: blue; &#125; .layout.grid .center&#123; background: yellow; &#125; &lt;/style&gt; &lt;article class="left-right-center"&gt; &lt;div class="left"&gt;&lt;/div&gt; &lt;div class="center"&gt; &lt;h1&gt;grid布局解决方案&lt;/h1&gt; 1.这是三栏布局中间部分 1.这是三栏布局中间部分 1.这是三栏布局中间部分 &lt;/div&gt; &lt;div class="right"&gt;&lt;/div&gt; &lt;/article&gt; &lt;/section&gt;&lt;/html&gt;]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
        <tag>布局，三栏布局</tag>
      </tags>
  </entry>
</search>
